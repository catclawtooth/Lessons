using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace REF
{
    internal class Program
    {
        static void Foo(ref int value)
        {
            value = -5;
        }
        static void Bar(ref int[] arr)
        {
            arr = new int[10];
        }
        static ref int Foo2(int[] numbers) // метод принимает в качестве параметра массив и по ссылке вернет один из элементов этого массива
        {
            return ref numbers[0];
        }
        static void Main(string[] args)
        {


            // <ref> со значимым типом
            int a = 2;
            Foo(ref a);
            Console.WriteLine(a);  // будет -5, т.к. передаем ссылку, без <ref> будет 2 т.к передаем значимый тип
            //----------------------------------------------------------------------------------------------------------------


            //<ref> с сылочным типом

            int[] myArray = { 1, 4, 6, 8 };
            Bar(ref myArray);
            Console.WriteLine("данные массива " + myArray.Length);

            //  Т.к ссылка <myArray> копируется в <arr>, и мы получаем две разные ссылки на разные массивы
            //  то совершая изменения по ссылке <arr> методом <Bar()>, мы никак не затрагиваем сам массив <myArray>.
            // Но используюя <ref>, мы НЕ КОПИРУЕМ ссылку в метод, а передаем ссылку <myArray> по ссылке <arr> внутрь метода <Bar>
            // и изменяя <arr> мы напрямую изменяем <myArray>
            //----------------------------------------------------------------------------------------------------------------


            // <ref> с сылочной локальной переменной

            int[] arr2 = { 2, 6, 1 }; 
            ref int b = ref arr2[0];    //  без <ref> массив останется не измененным (arr2[0] == 2). А с <ref> (arr2[0] == -5)
            b = -5;                     //  а с <ref> в переменную <b> мы не скопировали значение, а передали ссылку на элемент массива
            //----------------------------------------------------------------------------------------------------------------


            //<ref> с возвращаемым ссылочным значением

            int[] arr3 = { 3, 5, 9 };
            ref int c = ref Foo2(arr3); // возвращаем с помощью метода ссылку на индекс массива в переменную <c>
            c = -8; // изменяя, по ссылке на индекс массива, значение, мы естественно изменяем данные в массиве
            //----------------------------------------------------------------------------------------------------------------
        }
    }
}
